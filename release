#!/bin/bash

set -euo pipefail

# If you have a PGP key set up for commit signing, do a one-off signing of an
# empty string to make sure gpg-agent has the key in memory
preauth_pgp_signature() {
  if [[ $(git config --get user.signingkey 2> /dev/null) != '' ]] ; then
    echo '' | gpg --sign > /dev/null
  fi
}

run() {
  release_type=${1:-other}

  if [[ $release_type != 'major' ]] &&
    [[ $release_type != 'minor' ]] &&
    [[ $release_type != 'patch' ]]
  then
    echo 'Usage: release [major|minor|patch]'
    exit 1
  fi

  if [[ $(git rev-parse --abbrev-ref HEAD) != 'main' ]] ; then
    echo 'Cannot release from a branch other than main'
    exit 1
  fi

  if [[ $(git describe --exact-match --tags HEAD 2> /dev/null) ]] ; then
    echo 'Current commit is already a tag commit; not releasing it again'
    exit 1
  fi

  if [[ $(git status --porcelain) != '' ]] ; then
    echo 'Cannot release with uncommitted changes'
    exit 1
  fi

  preauth_pgp_signature

  git fetch origin --tags
  git pull --ff-only origin main

  npm version $release_type

  git push origin main --follow-tags

  git checkout -B production
  git pull --ff-only origin production
  git merge --ff-only main
  git push origin production

  git checkout main

  local recent_tags=$(git for-each-ref --sort=-creatordate --format '%(refname:lstrip=2)' refs/tags | head -n 2)
  local previous_tag=$(echo "$recent_tags" | tail -n 1)
  local this_tag=$(echo "$recent_tags" | head -n 1)

  if [[ "$previous_tag" != '' && $this_tag != '' ]]; then
    echo "ℹ️ Changes in this release (please share a changelog with the team):"
    echo
    echo $(git show-ref -s --abbrev $previous_tag)...$(git show-ref -s --abbrev $this_tag) $this_tag
    echo
    git --no-pager log --pretty=tformat:'- %ad (%an) %s' --date=short $previous_tag..$this_tag^
    echo
  fi
}

run "$@"
