#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail
set -o noglob

# Run server with ts-node watching for changes

usage() {
  echo "Usage: bin/dev <api|api-worker> [-i]"
  echo 'Options:'
  echo ' -i Enable inspector'
  exit 1
}

DEFAULT_APP=api_and_worker

run() {
  source bin/lib/loadenv
  loadenv_local

  app_to_run=${1:-$DEFAULT_APP}
  if [[ ${1:-""} == -* ]]; then
    app_to_run=$DEFAULT_APP
  elif [[ $# -gt 0 ]]; then
    shift
  fi

  nodemon_opts=""
  while getopts "i" opt; do
    case $opt in
      i)
        nodemon_opts="--inspect"
        ;;
      *)
        usage
        ;;
      esac
  done

  case "$app_to_run" in
    api)
      npx nodemon $nodemon_opts -e '[t|j]s' -w ./src -r 'ts-node/register' ./src
      ;;

    api-worker)
      npx nodemon $nodemon_opts -e '[t|j]s' -w ./src -r 'ts-node/register' ./src/workers/api-worker
      ;;

    api_and_worker)
      npx nodemon $nodemon_opts -e '[t|j]s' -w ./src -r 'ts-node/register' ./src 2>&1 | sed -e 's/^/api: /;' &
      sleep 3
      npx nodemon ${nodemon_opts/--inspect/--inspect=127.0.0.1:9239}  -e '[t|j]s' -w ./src -r 'ts-node/register' ./src/workers/api-worker 2>&1 | sed -e 's/^/api-worker: /;' &

      trap "kill 0" EXIT # Kill children when this process is killed
      wait # wait for all background processes
      ;;

    *)
      usage
      ;;
  esac
}

run "$@"
