#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail
set -o noglob

# Publish built assets to environments
# Usage: bin/publish <staging|production>


usage_fail() {
  echo "Usage: bin/publish <staging|production>"
  exit 1
}

preflight() {
  if [[ ! -d dist ]]; then
    echo 'Missing built code'
    exit 1
  fi

  echo 'Checking deployment readiness...'
  npx cala-validate-deployment-readiness $host dist/migrations

  [[ ! -s \"$(git rev-parse --git-dir)/shallow\" ]] || git fetch --unshallow
  git branch -D deploy-branch || true
  git checkout --orphan deploy-branch
  git add -f dist
  git commit -m '[ci skip] add built code'
}

postflight() {
  git checkout main
}

run() {
  host=${1:-""}
  if [[ "$host" != "staging" && "$host" != "production" ]]; then
    usage_fail
  fi

  preflight

  case "$host" in
    staging)
      echo 'Deploying to Staging:'
      git push https://heroku:$HEROKU_API_KEY@git.heroku.com/cala-api-stg.git deploy-branch:master -f
      bin/publish_api_types --prerelease
      ;;
    production)
      echo 'Deploying to Production:'
      git push https://heroku:$HEROKU_API_KEY@git.heroku.com/cala-api-prod.git deploy-branch:master -f
      echo 'Deploying to Demo:'
      git push https://heroku:$HEROKU_API_KEY@git.heroku.com/cala-api-demo.git deploy-branch:master -f
      bin/publish_api_types
      ;;
    *)
      usage_fail
      ;;
  esac

  postflight
}

run "$@"
