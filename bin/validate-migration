#!/bin/bash

set -euo pipefail

c_green=$'\033[0;32m'
c_red=$'\033[0;31m'
c_yellow=$'\033[1;33m'
c_reset=$'\033[0m'

data_backup_path=$TMPDIR/cala-db-data-backup.txt
before_migration_path=$TMPDIR/cala-db-before-migration.txt
after_migration_path=$TMPDIR/cala-db-after-migration.txt
after_rollback_path=$TMPDIR/cala-db-after-rollback.txt

db_url='postgres://localhost/cala-test'

migrate() {
  # Swap this out for your own implementation if you're not using knex
  DATABASE_URL=$db_url $(npm bin)/knex migrate:latest
}

rollback() {
  # Swap this out for your own implementation if you're not using knex
  DATABASE_URL=$db_url $(npm bin)/knex migrate:rollback
}

pre() {
  echo -n "$@"
}

post() {
  echo $c_green Done$c_reset
}

restore_data() {
  psql $db_url < $data_backup_path > /dev/null
}

fail_elegantly() {
  echo -n $c_red"Unable to complete migration. Restoring initial data..."$c_reset
  restore_data
  post
  exit 1
}

main() {
  pre 'Dumping initial data... '
  pg_dump -c $db_url > $data_backup_path
  post

  pre 'Dumping initial schema... '
  pg_dump -sOx $db_url > $before_migration_path
  post

  pre 'Migrating... '
  migrate > /dev/null || fail_elegantly
  post

  pre 'Dumping migrated schema... '
  pg_dump -sOx $db_url > $after_migration_path
  post

  pre 'Rolling back... '
  rollback > /dev/null || fail_elegantly
  post

  pre 'Dumping final schema... '
  pg_dump -sOx $db_url > $after_rollback_path
  post

  pre 'Restoring initial data... '
  restore_data
  post

  echo $c_yellow'Schema difference after migration (should be non-zero):'$c_reset
  diff $before_migration_path $after_migration_path || true

  echo $c_yellow'Schema difference after applying and rolling back (should be zero):'$c_reset
  diff $before_migration_path $after_rollback_path
}

main "$@"
