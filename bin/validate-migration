#!/bin/bash

set -euo pipefail

c_green=$'\033[0;32m'
c_red=$'\033[0;31m'
c_yellow=$'\033[1;33m'
c_reset=$'\033[0m'

initial_data_path=$TMPDIR/cala-db-initial-schema.txt
initial_schema_path=$TMPDIR/cala-db-before-migration.txt
after_migration_schema_path=$TMPDIR/cala-db-after-migration.txt
after_rollback_schema_path=$TMPDIR/cala-db-after-rollback.txt

db_url='postgres://postgres@test-postgres:5432/cala'

pre() {
  echo -n "$@"
}

post() {
  echo $c_green Done$c_reset
}

restore_data() {
  pre 'Restoring initial schema... '
  cat $initial_schema_path | docker-compose \
                                 -f docker-compose.yml \
                                 -f docker-compose.test.yml \
                                 run --rm test-postgres \
                                 bash -c "psql --dbname=$db_url" -- > /dev/null
  post

  pre 'Restoring initial data... '
  cat $initial_data_path | docker-compose \
                               -f docker-compose.yml \
                               -f docker-compose.test.yml \
                               run --rm test-postgres \
                               bash -c "psql --dbname=$db_url" -- > /dev/null
  post
}

fail_elegantly() {
  echo $c_red"Unable to complete migration."$c_reset
  restore_data
  exit 1
}

main() {
  pre 'Building app'
  echo ''
  docker-compose \
      -f docker-compose.yml \
      -f docker-compose.test.yml \
      run test \
      bash -c "npx tsc -p ." -- > $initial_data_path
  post

  pre 'Dumping initial data... '
  docker-compose \
      -f docker-compose.yml \
      -f docker-compose.test.yml \
      run test-postgres \
      bash -c "pg_dump -c $db_url" -- > $initial_data_path
  post

  pre 'Dumping initial schema... '
  docker-compose \
      -f docker-compose.yml \
      -f docker-compose.test.yml \
      run test-postgres \
      bash -c "pg_dump -csOx $db_url" -- > $initial_schema_path
  post

  pre 'Migrating... '
  echo ''
  SKIP_BUILD=true npm run --silent migrate-test || fail_elegantly
  post

  pre 'Dumping migrated schema... '
  docker-compose \
      -f docker-compose.yml \
      -f docker-compose.test.yml \
      run test-postgres \
      bash -c "pg_dump -csOx $db_url" -- > $after_migration_schema_path
  post

  pre 'Rolling back... '
  echo ''
  SKIP_BUILD=true npm run --silent rollback-test || fail_elegantly
  post

  pre 'Dumping final schema... '
  docker-compose \
      -f docker-compose.yml \
      -f docker-compose.test.yml \
      run test-postgres \
      bash -c "pg_dump -csOx $db_url" -- > $after_rollback_schema_path
  post

  restore_data

  echo $c_yellow'Schema difference after migration (should be non-zero):'$c_reset
  diff $initial_schema_path $after_migration_schema_path || true

  echo $c_yellow'Schema difference after applying and rolling back (should be zero):'$c_reset
  diff $initial_schema_path $after_rollback_schema_path
}

main "$@"
