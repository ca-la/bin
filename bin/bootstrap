#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail
set -o noglob

source bin/lib/colors

# Create a local development environment for API
# Does not perform any destructive actions; generally the script will terminate
# if it hits an error, hopefully with a useful error message.
#
# Usage: bin/bootstrap

print_red() {
  echo -e "${red}$1${reset}"
}

print_green() {
  echo -e "${green}$1${reset}"
}

print_blue() {
  echo -e "${blue}$1${reset}"
}

fail_fatal() {
  print_red ERROR
  print_red "$1"
  exit 1
}

ensure_command() {
  local cmd=${1}
  local friendly_name=${2}
  local url=${3}

  echo -n "Checking for $friendly_name... "

  if ! command -v $cmd &> /dev/null; then
    fail_fatal "We can't find the '$cmd' command on your \$PATH. Please install $friendly_name and try again: $url"
  fi

  print_green "OK"
}

run() {
  print_blue """
           _                         _
  ___ __ _| | __ _        __ _ _ __ (_)
 / __/ _\` | |/ _\` |_____ / _\` | '_ \| |
| (_| (_| | | (_| |_____| (_| | |_) | |
 \___\__,_|_|\__,_|      \__,_| .__/|_|
                              |_|

Welcome to the CALA API bootstrapping script.
First we're going to check that you have the required tools installed.
"

  ensure_command brew Homebrew "https://brew.sh"
  ensure_command node node.js "https://nodejs.org/"
  ensure_command npm npm "https://nodejs.org/"
  ensure_command heroku "the Heroku CLI" "https://devcenter.heroku.com/articles/heroku-cli"
  ensure_command psql "psql (PostgreSQL)" "https://postgresapp.com"
  ensure_command createdb "createdb (PostgreSQL)" "https://postgresapp.com"

  echo -n "Checking for findutils..."
  if [[ $(xargs --version | grep -o findutils) != "findutils" ]]; then
    print_blue "It looks like you don't have the \`findutils\` version of \`xargs\` on your \$PATH."
    echo -n "Installing findutils... "
    brew install findutils >/dev/null
    print_green "OK"

    if [[ $(xargs --version | grep -o findutils) != "findutils" ]]; then
      fail_fatal "Even after installation, we couldn't access findutils. Please ensure that your \$PATH is set up correctly to include Homebrew packages, \
and \`findutils\` specifically: https://sourabhbajaj.com/mac-setup/Homebrew/README.html

This may require adding a line to your ~/.bash_profile or ~/.zshrc as follows:

export PATH=/usr/local/opt/findutils/libexec/gnubin:\$PATH"
    fi
  fi
  print_green "OK"

  echo -n "Checking node.js and npm versions... "
  if [[ $(node -v) != "v10.15.0" ]] || [[ $(npm -v) != "6.4.1" ]]; then
    fail_fatal "CALA applications use node.js version 10.15.0 and npm 6.4.1. \
Please install these versions and try again. We recommend \
https://github.com/tj/n for managing different installations."
  fi
  print_green "OK"

  echo ""
  print_blue "Now let's set up your environment."
  echo ""

  echo -n "Checking .env file... "
  if [[ ! -e .env ]]; then
    fail_fatal "Looks like you don't have a local .env file yet. Please copy this \
from the file in 1Password titled 'CALA API .env file (development)' \
into this directory."
  fi
  bash -c 'source bin/lib/loadenv && loadenv_local' || fail_fatal "Couldn't \
parse your local .env file, please make sure it's formatted correctly"
  print_green "OK"

  echo -n "Checking .test.env file... "
  if [[ ! -e .test.env ]]; then
    print_blue "No .test.env file found, creating one for you"
    echo "DATABASE_URL=postgresql://localhost/cala-test" > .test.env
  fi
  print_green "OK"


  echo -n "Checking npm access... "
  npm info @cala/ts-lib &>/dev/null || fail_fatal "It looks like you don't \
have access to CALA npm packages. Pleas run \`npm login\`."
  print_green "OK"

  echo -n "Checking Heroku access... "
  heroku ps -a cala-api-stg >/dev/null || fail_fatal "It looks like you don't \
have access to the CALA apps. Run \`heroku login\` to sign in as a user with access."
  print_green "OK"

  echo -n "Installing dependencies... "
  npm install --quiet --no-progress --no-audit --loglevel=error >/dev/null
  print_green "OK"

  echo -n "Checking database access... "
  pg_isready >/dev/null || fail_fatal "Cannot connect to local PostgreSQL, please check that it's running"
  print_green "OK"

  echo -n "Creating CALA databases... "
  createdb cala || fail_fatal "Cannot create 'cala' database - double check permissions and remove it if it already exists."
  createdb cala-test || fail_fatal "Cannot create 'cala-test' database - double check permissions and remove it if it already exists."
  print_green "OK"

  echo -n "Migrating databases... "
  bin/migrate local >/dev/null
  print_green "OK"

  echo -n "Downloading pricing data from Staging... "
  pg_dump --data-only \
    --table=pricing_margins \
    --table=pricing_product_materials \
    --table=pricing_process_timelines \
    --table=pricing_processes \
    --table=pricing_product_types \
    --table=pricing_constants \
    --table=pricing_care_labels \
    $(heroku config:get DATABASE_URL -a cala-api-stg) \
  > $TMPDIR/staging-pricing.sql
  print_green "OK"

  echo -n "Inserting Staging pricing data... "
  psql -d cala -f $TMPDIR/staging-pricing.sql >/dev/null
  psql -d cala-test -f $TMPDIR/staging-pricing.sql >/dev/null
  print_green "OK"

  echo -n "Creating your first user... "
  psql cala -c "
    insert into users
      (id, name, email, role, referral_code, password_hash)
      values (
        '00000000-0000-0000-0000-000000000000',
        'CALA User',
        'devops@ca.la',
        'ADMIN',
        'n/a',
        '\$2b\$10\$vuU2RiNa77I2GPUqjFd2euCurgZHMZkKkCA1EaadRXYGEnMMWkn9S'
      );

    insert into users
      (id, name, email, role, referral_code, password_hash)
      values (
        '00000000-0000-0000-0000-000000000001',
        'CALA Partner',
        'devops+partner@ca.la',
        'PARTNER',
        'n/a',
        '\$2b\$10\$vuU2RiNa77I2GPUqjFd2euCurgZHMZkKkCA1EaadRXYGEnMMWkn9S'
      );

    insert into plans (
      id,
      monthly_cost_cents,
      stripe_plan_id,
      title,
      is_default,
      billing_interval,
      revenue_share_basis_points,
      cost_of_goods_share_basis_points,
      is_public,
      description,
      ordering
    ) values (
      'efe2b18d-6669-4cd6-99a1-5e5ee43db597',
      10000,
      'plan_FdS0kUdIfGxLoG',
      'Test Plan',
      true,
      'MONTHLY',
      0,
      0,
      true,
      'Everything you need.',
      0
    );
      " >/dev/null
  print_green "OK"

  print_green "ðŸŽ‰ You're up and running!
An ADMIN user has been created with the following credentials:
  Email: devops@ca.la
  Password: cala

A PARTNER user has been created with the following credentials:
  Email: devops+partner@ca.la
  Password: cala

You can run bin/dev to start a development server."
}

run "$@"
