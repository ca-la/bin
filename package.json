{
  "name": "cala-api",
  "version": "1.280.1",
  "description": "REST",
  "main": "dist/index.js",
  "author": "CALA <devops@ca.la>",
  "license": "UNLICENSED",
  "private": true,
  "dependencies": {
    "@cala/ts-lib": "^0.11.2",
    "@types/http-assert": "^1.3.0",
    "@types/knex": "^0.14.24",
    "@types/koa-compress": "^2.0.8",
    "@types/lodash": "^4.14.112",
    "@types/mime-types": "^2.1.0",
    "@types/node": "10.3.1",
    "@types/node-fetch": "^2.3.3",
    "@types/node-uuid": "0.0.28",
    "aws-sdk": "^2.302.0",
    "bcrypt": "2.0.1",
    "co-body": "4.2.0",
    "dd-trace": "^0.7.2",
    "form-data": "2.1.2",
    "google-libphonenumber": "2.0.9",
    "knex": "^0.15.2",
    "koa": "^1.6.2",
    "koa-compress": "^1.0.9",
    "koa-multer": "0.0.2",
    "koa-router": "5.4.0",
    "lodash": "^4.17.11",
    "mime-types": "2.1.21",
    "node-fetch": "1.6.3",
    "node-uuid": "1.4.7",
    "pg": "^7.4.3",
    "pg-rethrow": "1.0.1",
    "probe-image-size": "^4.0.0",
    "ts-node": "^7.0.1",
    "tslint": "^5.10.0",
    "tslint-config-airbnb": "^5.9.2",
    "typescript": "2.9.1",
    "xstate": "4.3.3",
    "zipcodes": "2.1.0"
  },
  "devDependencies": {
    "@cala/bin": "^2.0.0",
    "@types/csv-parse": "^1.1.11",
    "@types/meow": "^5.0.0",
    "@types/sinon": "^5.0.1",
    "@types/tape": "^4.2.32",
    "csv-parse": "^4.2.0",
    "eslint": "^5.14.1",
    "eslint-config-airbnb-base": "^13.0.0",
    "eslint-import-resolver-typescript": "^1.0.2",
    "eslint-plugin-import": "^2.13.0",
    "meow": "^5.0.0",
    "nodemon": "^1.18.9",
    "npm-run-all": "^4.1.5",
    "nyc": "^13.3.0",
    "sinon": "^6.1.5",
    "tap-difflet": "^0.7.1",
    "tap-spec": "^5.0.0",
    "tap-xunit": "^2.3.0",
    "tape": "4.6.2"
  },
  "engines": {
    "node": "10.15.0",
    "npm": "6.4.1"
  },
  "scripts": {
    "clean": "rm -rf ./dist && mkdir -p ./dist",
    "prebuild": "npm run clean",
    "build": "tsc",
    "watch:typescript": "tsc --preserveWatchOutput -w -p .",
    "watch:server": "nodemon --delay 2 -w ./dist dist",
    "dev": "npm run loadenv -- npm-run-all build --parallel watch:*",
    "console": "npm run loadenv -- node",
    "prerelease": "npm run test",
    "release": "cala-release",
    "loadenv": "eval $(cat .env | xargs -d '\n')",
    "loadtestenv": "eval $(cat .env .test.env | xargs -d '\n')",
    "loadenv:stg": "eval $(heroku config -s -a cala-api-stg | xargs -d '\n') DATABASE_URL=$(heroku config:get DATABASE_URL -a cala-api-stg)?ssl=true",
    "loadenv:prod": "eval $(heroku config -s -a cala-api-prod | xargs -d '\n') DATABASE_URL=$(heroku config:get DATABASE_URL -a cala-api-prod)?ssl=true",
    "loadenv:demo": "eval $(heroku config -s -a cala-api-demo | xargs -d '\n') DATABASE_URL=$(heroku config:get DATABASE_URL -a cala-api-demo)?ssl=true",
    "script": "npm run loadenv -- bin/run",
    "script:stg": "npm run loadenv:stg -- bin/run",
    "script:prod": "npm run loadenv:prod -- bin/run",
    "script:demo": "npm run loadenv:demo -- bin/run",
    "prestart": "stat dist > /dev/null",
    "start": "npm run loadenv -- node dist",
    "migration:validate": "npm run loadtestenv -- cala-validate-migration",
    "migration:create": "bin/create-migration",
    "migration:run:local": "npm run loadenv -- bin/migrate local && SKIP_BUILD=true npm run migration:run:test",
    "migration:rollback:local": "npm run loadenv -- bin/migrate local rollback && SKIP_BUILD=true npm run migration:run:test rollback",
    "migration:run:test": "npm run loadtestenv -- bin/migrate local",
    "migration:run:staging": "npm run loadenv -- bin/migrate staging",
    "migration:run:production": "npm run loadenv -- bin/migrate production",
    "lint": "bin/lint",
    "tt": "npm run loadtestenv -- bin/tt",
    "pretest": "npm-run-all build lint",
    "test": "npm run loadtestenv -- bin/test",
    "coverage": "npm run loadtestenv -- npx nyc tape \"dist/**/*spec.js\" | npx tap-spec"
  },
  "nyc": {
    "all": true,
    "exclude": [
      "**/*spec.*",
      "coverage/**",
      "dist/migrations/**",
      "src/migrations/**",
      "src/test-helpers/**"
    ],
    "reporter": [
      "lcov",
      "text-summary"
    ]
  }
}
